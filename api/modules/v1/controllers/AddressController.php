<?php
/**
 * tlx2
 * PhpStorm
 * @author zhibin
 * @date 2019-10-22
 * Class GoodController.php
 */

namespace api\modules\v1\controllers;


use api\controllers\OnAuthController;
use common\models\app\Address;
use common\models\common\Provinces;

class AddressController  extends OnAuthController
{
    public $modelClass = '';
    protected $optional = ['list', 'detail','create','edit','delete','default','set-default','province'];
    public function actionList(){
        $post = $this->getPost();
        $page = $post['page'] ?? 1;
        $size =$post['size'] ?? 10;
        $offset = ($page - 1 )*$size;
        $member_id = $post['member_id'];
        $list = Address::find()->where(['member_id' => $member_id,'status' => 1])->offset($offset)->limit($size)->asArray()->all();
        return $list;
    }
    public function actionDetail(){
        $post = $this->getPost();
        $id = $post['id'];
        $info = Address::find()->asArray()->where(['id' => $id])->one();
        return $info;
    }
    public function actionCreate(){
        $post = $this->getPost();
        $address = new Address();
        $address->member_id = $post['member_id'];
        $address->province_id = $post['province_id'];
        $address->city_id = $post['city_id'];
        $address->area_id = $post['area_id'];
        $address->address_name = $post['address_name'];
        $address->address_details = $post['address_details'];
        $address->is_default = $post['is_default'] ?? 0;
        $address->realname = $post['realname'];
        $address->mobile = $post['mobile'];
        return $address->save();
    }
    public function actionEdit(){
        $post = $this->getPost();
        $address = Address::findOne($post['id']);
        $address->province_id = $post['province_id'];
        $address->city_id = $post['city_id'];
        $address->area_id = $post['area_id'];
        $address->address_name = $post['address_name'];
        $address->address_details = $post['address_details'];
        $address->is_default = $post['is_default'] ?? 0;
        $address->realname = $post['realname'];
        $address->mobile = $post['mobile'];
        return $address->save();
    }
    public function actionDelete()
    {
        return parent::actionDelete(); // TODO: Change the autogenerated stub
    }
    public function actionDefault(){
        $info = Address::find()->asArray()->where(['is_default' => 1])->one();
        return $info;
    }
    public function actionSetDefault(){
        $post = $this->getPost();
        $id = $post['id'];
        Address::updateAll(['is_default' =>0]);
        $info = Address::findOne($id);
        $info->is_default = 1;
        return $info->save();
    }
    public function actionProvince(){
        $post = $this->getPost();
        $pid = $post['pid'] ?? 0;
        $level = $post['level'] ?? 1;
        $list = Provinces::find()->select('id as code,title as name')->where(['pid' => $pid,'level' => $level])->asArray()->all();
        return $list;
    }
}